DESTDIR =
VPATH = @srcdir@
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/..
objroot = $(objdir)/..
mkinstalldirs = $(SHELL) $(srcroot)/mkinstalldirs

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@
target = @target@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

SHELL =	/bin/sh

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@

OBJS		= bios-memsize.o
CFLAGS		= -mseparate-code-segment
ASFLAGS		=
HEADERS		= bios.h i86.h
BSP		= libi86.a

# Host specific makefile fragment comes in here.
@host_makefile_frag@

CPPFLAGS += $(INCLUDES) -I$(srcdir) -I.

INSTALL_LIBS	= $(BSP)
INSTALL_HEADERS	= $(HEADERS)

.PHONY: default
default: all

.PHONY: all
all: $(INSTALL_LIBS) $(INSTALL_HEADERS)
	+@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=$@

.PHONY: install
install:
	$(mkinstalldirs) $(DESTDIR)$(tooldir)/lib$(MULTISUBDIR)
	set -e; \
	for x in $(INSTALL_LIBS); do \
	  $(INSTALL_DATA) $$x $(DESTDIR)$(tooldir)/lib$(MULTISUBDIR)/$$x; \
	done
	set -e; \
	for x in $(INSTALL_HEADERS); do
	  $(INSTALL_DATA) $$x $(DESTDIR)$(tooldir)/include/$$x; \
	done
	+@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=$@

.PHONY: test doc info install-info clean-info
test doc info install-info clean-info:
	+@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=$@

.PHONY: clean mostlyclean
clean mostlyclean: clean-here
	+@$(MULTICLEAN) $(FLAGS_TO_PASS) multi-clean DO=$@

.PHONY: clean-here
clean-here:
	$(RM) -f a.out core *.i *.o *-test *.srec *.dis *.x *.hex $(BSP)

.PHONY: distclean maintainer-clean realclean
distclean maintainer-clean realclean: clean
	+@$(MULTICLEAN) $(FLAGS_TO_PASS) multi-clean DO=$@
	rm -f Makefile config.cache config.log config.status *~

$(BSP): $(OBJS)
	$(RM) $@
	$(AR) rcs $@ $+

%.o: %.c
	$(CC) $(CPPFLAGS) $(CFLAGS) $(MULTILIB) -c $<

%.o: %.S
	$(CC) $(CPPFLAGS) $(CFLAGS) $(ASFLAGS) $(MULTILIB) -c $<

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
