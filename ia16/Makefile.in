# Copyright (c) 2018--2021 TK Chia
#
# This file is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; see the file COPYING2.LIB.  If not see
# <http://www.gnu.org/licenses/>.

# Derived from libgloss/cr16/Makefile.in in Newlib.

DESTDIR =
VPATH = @srcdir@
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/..
objroot = $(objdir)/..
mkinstalldirs = $(SHELL) $(srcroot)/mkinstalldirs

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

SHELL =	/bin/sh

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
NM = @NM@
AWK = @AWK@
RANLIB = @RANLIB@
PACKAGE_VERSION = @PACKAGE_VERSION@

INSTALL_LIBS	= libi86.a
INSTALL_HEADERS	= bios.h \
		  conio.h \
		  dos.h \
		  dpmi.h \
		  graph.h \
		  i86.h \
		  libi86/stdlib.h \
		  libi86/string.h \
		  libi86/internal/cdefs.h \
		  libi86/internal/far-cxx.h \
		  libi86/internal/portio.h \
		  $(CLEAN_HEADERS)
CLEAN_HEADERS	= libi86/config.h \
		  libi86/internal/acconfig.h

OBJS		= bios/bios-disk.o \
		  bios/bios-equiplist.o \
		  bios/bios-joystick.o \
		  bios/bios-keybrd.o \
		  bios/bios-memsize.o \
		  bios/bios-timeofday.o \
		  conio/cgets.o \
		  conio/clreol.o \
		  conio/clrscr.o \
		  conio/cprintf.o \
		  conio/cputs.o \
		  conio/cscanf.o \
		  conio/delline.o \
		  conio/getch.o \
		  conio/getche.o \
		  conio/getpass.o \
		  conio/gettextinfo.o \
		  conio/gotoxy.o \
		  conio/highvideo.o \
		  conio/inp.o \
		  conio/inpw.o \
		  conio/insline.o \
		  conio/kbhit.o \
		  conio/lowvideo.o \
		  conio/normvideo.o \
		  conio/outp.o \
		  conio/outpw.o \
		  conio/putch.o \
		  conio/textattr.o \
		  conio/textbackground.o \
		  conio/textcolor.o \
		  conio/textmode.o \
		  conio/ungetch.o \
		  conio/vcprintf.o \
		  conio/vcscanf.o \
		  conio/wherex.o \
		  conio/wherey.o \
		  conio/window.o \
		  conio/libi86-bc-cgets.o \
		  conio/libi86-bc-cprintf.o \
		  conio/libi86-bc-cputs.o \
		  conio/libi86-bc-cscanf.o \
		  conio/libi86-bc-getche.o \
		  conio/libi86-bc-putch.o \
		  conio/libi86-bc-vcprintf.o \
		  conio/libi86-bc-vcscanf.o \
		  conio/libi86-con-in-fd.o \
		  conio/libi86-con-out-fd.o \
		  conio/libi86-ungetch-buf.o \
		  conio/libi86-vid-bc-insdelline.o \
		  conio/libi86-vid-bc-outmem-do.o \
		  dos/bdos.o \
		  dos/dos-allocmem.o \
		  dos/dos-close.o \
		  dos/dos-commit.o \
		  dos/dos-findclose.o \
		  dos/dos-findfirst.o \
		  dos/dos-findnext.o \
		  dos/dos-freemem.o \
		  dos/dos-getdrive.o \
		  dos/dos-getfileattr.o \
		  dos/dos-getvect.o \
		  dos/dos-setdrive.o \
		  dos/dos-setfileattr.o \
		  dos/dos-setvect.o \
		  dos/getdrive.o \
		  dos/intdos.o \
		  dos/intdosx.o \
		  dos/libi86-bc-intdos.o \
		  dos/libi86-bc-intdosx.o \
		  dos/libi86-ret-really-set-errno.o \
		  dos/libi86-ret-set-errno.o \
		  dpmi/dpmi-hosted.o \
		  dpmi/dpmiallocatedosmemoryblock.o \
		  dpmi/dpmifreedosmemoryblock.o \
		  dpmi/dpmigetdescriptor.o \
		  dpmi/dpmisegmenttodescriptor.o \
		  dpmi/dpmisimulaterealmodeint.o \
		  graph/clearscreen.o \
		  graph/gettextposition.o \
		  graph/getvideomode.o \
		  graph/outmem.o \
		  graph/outtext.o \
		  graph/scrolltextwindow.o \
		  graph/settextcolor.o \
		  graph/settextposition.o \
		  graph/settextwindow.o \
		  graph/setvideomode.o \
		  graph/libi86-bios-ds.o \
		  graph/libi86-setvideomode-default.o \
		  graph/libi86-setvideomode-nonsvga.o \
		  graph/libi86-setvideomode-svga.o \
		  graph/libi86-vid-state.o \
		  i86/delay.o \
		  i86/disable.o \
		  i86/enable.o \
		  i86/int86.o \
		  i86/int86x.o \
		  i86/intr.o \
		  i86/libi86-bc-int86.o \
		  i86/libi86-bc-int86-do.o \
		  i86/libi86-bc-int86x.o \
		  i86/libi86-bc-int86x-do.o \
		  i86/libi86-int86-do.o \
		  i86/libi86-int86x-do.o \
		  $(foreach da,0 1 2 3, \
		    $(foreach db,0 1 2 3 4 5 6 7, \
		      $(foreach dc,0 1 2 3 4 5 6 7, \
			i86/libi86-intr-call-0$(da)$(db)$(dc).o))) \
		  i86/libi86-intr-do.o \
		  i86/libi86-intr-dispatch.o \
		  i86/libi86-sound-by-divisor.o \
		  i86/nosound.o \
		  i86/segread.o \
		  i86/sound.o \
		  string/fmemcpy.o \
		  string/fmemmove.o \
		  string/fstrlen.o \
		  string/libi86-fmemmove-backward.o \
		  stdlib/lltoa.o \
		  stdlib/ltoa.o \
		  stdlib/makepath.o \
		  stdlib/osmajor-osminor.o \
		  stdlib/psp.o \
		  stdlib/splitpath.o \
		  stdlib/ulltoa.o \
		  stdlib/ultoa.o
OBJ_SUBDIRS	= $(sort $(dir $(OBJS)))
CFLAGS		= -mseparate-code-segment
ifeq "" "$(filter -O%,$(CC) $(CFLAGS) $(MULTILIB))"
  CFLAGS	+= -Os
endif
ASFLAGS		=
# Headers we depend on when creating .o files; these do not include
# libi86/config.h which is only generated after creating the library.
HEADERS		= $(filter-out libi86/config.h,$(INSTALL_HEADERS)) \
		  libi86/internal/arch.h \
		  libi86/internal/call-cvt.h \
		  libi86/internal/conio.h \
		  libi86/internal/dos.h \
		  libi86/internal/graph.h \
		  libi86/internal/struc.h
BSP		= $(INSTALL_LIBS)

# Host specific makefile fragment comes in here.
@host_makefile_frag@

CPPFLAGS += $(INCLUDES) -I$(srcdir) -I.

.PHONY: default
default: all

.PHONY: all
all: $(INSTALL_LIBS) $(INSTALL_HEADERS)
	+@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=$@

.PHONY: install
install: $(INSTALL_LIBS) $(INSTALL_HEADERS)
	$(mkinstalldirs) $(DESTDIR)$(tooldir)/lib$(MULTISUBDIR) \
			 $(DESTDIR)$(tooldir)/include \
			 $(DESTDIR)$(tooldir)/include/libi86 \
			 $(DESTDIR)$(tooldir)/include/libi86/internal
	set -e; \
	d=$(DESTDIR)$(tooldir)/lib$(MULTISUBDIR); \
	for f in $(INSTALL_LIBS); do \
	  if [ -f "$$f" ]; then \
	    $(INSTALL_DATA) "$$f" "$$d/$$f"; \
	  else \
	    $(INSTALL_DATA) $(srcdir)/"$$f" "$$d/$$f"; \
	  fi; \
	done
	set -e; \
	d=$(DESTDIR)$(tooldir)/include; \
	for f in $(INSTALL_HEADERS); do \
	  if [ -f "$$f" ]; then \
	    $(INSTALL_DATA) "$$f" "$$d/$$f"; \
	  else \
	    $(INSTALL_DATA) $(srcdir)/"$$f" "$$d/$$f"; \
	  fi; \
	done
	+@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=$@

.PHONY: test doc info install-info clean-info
test doc info install-info clean-info:
	+@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=$@

.PHONY: clean mostlyclean
clean mostlyclean: clean-here
	+@$(MULTICLEAN) $(FLAGS_TO_PASS) multi-clean DO=$@

.PHONY: clean-here
clean-here:
	$(RM) $(BSP) $(CLEAN_HEADERS)
	for d in . $(OBJ_SUBDIRS); do \
		$(RM) "$$d"/a.out "$$d"/core "$$d"/*.[iox] "$$d"/*-test \
		      "$$d"/*.srec "$$d"/*.dis "$$d"/*.hex; \
	done
	-rmdir libi86/internal libi86 $(OBJ_SUBDIRS)

.PHONY: distclean maintainer-clean realclean
distclean maintainer-clean realclean: clean
	+@$(MULTICLEAN) $(FLAGS_TO_PASS) multi-clean DO=$@
	rm -f Makefile config.cache config.log config.status *~

$(BSP): $(OBJS)
	$(RM) $@
	$(AR) rcs $@ $+

%.o: %.c $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -U_BORLANDC_SOURCE $(CFLAGS) $(MULTILIB) -c -o $@ $<

# We need this rule to override the next rule in case we do have a separate
# conio/libi86-bc-*.c source file.
conio/libi86-bc-%.o: conio/libi86-bc-%.c $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) $(CFLAGS) $(MULTILIB) -c -o $@ $<

conio/libi86-bc-%.o: conio/%.c $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -D_BORLANDC_SOURCE $(CFLAGS) $(MULTILIB) -c -o $@ $<

dos/libi86-bc-%.o: dos/%.S $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -D_BORLANDC_SOURCE $(CFLAGS) $(MULTILIB) -c -o $@ $<

i86/libi86-bc-%.o: i86/libi86-%.S $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -D_BORLANDC_SOURCE $(CFLAGS) $(MULTILIB) -c -o $@ $<

i86/libi86-bc-%.o: i86/%.S $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -D_BORLANDC_SOURCE $(CFLAGS) $(MULTILIB) -c -o $@ $<

%.o: %.S $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -U_BORLANDC_SOURCE $(CFLAGS) $(ASFLAGS) $(MULTILIB) \
	  -c -o $@ $<

i86/libi86-intr-call-%.o: i86/libi86-intr-call.S $(HEADERS)
	mkdir -p $(@D)
	$(CC) $(CPPFLAGS) -Dintr_no=$* $(CFLAGS) $(ASFLAGS) $(MULTILIB) -c \
	  -o $@ $<

libi86/config.h: make-config.sh $(BSP)
	mkdir -p $(@D)
	NM='$(NM)' AWK='$(AWK)' PACKAGE_VERSION='$(PACKAGE_VERSION)' \
	  $(SHELL) $< $(BSP) >$@.tmp
	mv $@.tmp $@

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
