# Copyright (c) 2022--2023 TK Chia
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   * Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#   * Neither the name of the developer(s) nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Configuration file for GitHub (https://github.com/) Continuous Integration.

name: ci-build
on: [push, pull_request]
jobs:
  build-and-install-gcc:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: setup
        run: |
          sudo ./tests/ci-base-setup.sh
          sudo add-apt-repository -y ppa:tkchia/build-ia16
          sudo apt-get update -y
          sudo apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf
      - name: build-and-install
        run: ./tests/ci-build-and-install.sh
      - name: store-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            ./tests/testsuite
            ./build.tmp
            ./install.tmp
  test1-gcc:
    needs: build-and-install-gcc
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: load-artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: setup
        run: |
          sudo ./tests/ci-base-setup.sh
          sudo add-apt-repository -y ppa:tkchia/build-ia16
          sudo apt-get update -y
          sudo apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf
          touch -c ./tests/testsuite
          chmod u+x ./tests/testsuite
      - name: test
        run: |
          n_tests="`./tests/ci-count-tests.sh`" \
          && first=1 \
          && last="`expr $n_tests / 5`" \
          && ./tests/ci-check.sh -j2 $first-$last
  test2-gcc:
    needs: build-and-install-gcc
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: load-artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: setup
        run: |
          sudo ./tests/ci-base-setup.sh
          sudo add-apt-repository -y ppa:tkchia/build-ia16
          sudo apt-get update -y
          sudo apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf
          touch -c ./tests/testsuite
          chmod u+x ./tests/testsuite
      - name: test
        run: |
          n_tests="`./tests/ci-count-tests.sh`" \
          && first="`expr $n_tests / 5 + 1`" \
          && last="`expr 2 \* $n_tests / 5`" \
          && ./tests/ci-check.sh -j2 $first-$last
  test3-gcc:
    needs: build-and-install-gcc
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: load-artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: setup
        run: |
          sudo ./tests/ci-base-setup.sh
          sudo add-apt-repository -y ppa:tkchia/build-ia16
          sudo apt-get update -y
          sudo apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf
          touch -c ./tests/testsuite
          chmod u+x ./tests/testsuite
      - name: test
        run: |
          n_tests="`./tests/ci-count-tests.sh`" \
          && first="`expr 2 \* $n_tests / 5 + 1`" \
          && last="`expr 3 \* $n_tests / 5`" \
          && ./tests/ci-check.sh -j2 $first-$last
  test4-gcc:
    needs: build-and-install-gcc
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: load-artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: setup
        run: |
          sudo ./tests/ci-base-setup.sh
          sudo add-apt-repository -y ppa:tkchia/build-ia16
          sudo apt-get update -y
          sudo apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf
          touch -c ./tests/testsuite
          chmod u+x ./tests/testsuite
      - name: test
        run: |
          n_tests="`./tests/ci-count-tests.sh`" \
          && first="`expr 3 \* $n_tests / 5 + 1`" \
          && last="`expr 4 \* $n_tests / 5`" \
          && ./tests/ci-check.sh -j2 $first-$last
  test5-gcc:
    needs: build-and-install-gcc
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: load-artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: setup
        run: |
          sudo ./tests/ci-base-setup.sh
          sudo add-apt-repository -y ppa:tkchia/build-ia16
          sudo apt-get update -y
          sudo apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf
          touch -c ./tests/testsuite
          chmod u+x ./tests/testsuite
      - name: test
        run: |
          n_tests="`./tests/ci-count-tests.sh`" \
          && first="`expr 4 \* $n_tests / 5 + 1`" \
          && ./tests/ci-check.sh -j2 $first-
  test-ack:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: setup
        run: |
          sudo ./tests/ci-base-setup.sh
          sudo apt-get install -y ack-compiler
      - name: build-and-install
        run: ./tests/ci-build-and-install.sh --ack
      - name: test
        run: ./tests/ci-check.sh
