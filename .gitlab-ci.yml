# Copyright (c) 2020--2023 TK Chia
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   * Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#   * Neither the name of the developer(s) nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Configuration file for GitLab (https://gitlab.com/) Continuous Integration.

image: ubuntu:focal
variables:
  # The keyboard-configuration package installation may stall & wait for
  # input unless we set an environment variable.  See https://community
  # .gitpod.io/t/configuring-keyboard-configuration/2675/5 .
  DEBIAN_FRONTEND: noninteractive
default:
  before_script:
    - ./tests/ci-base-setup.sh
    - apt-get install -y adduser
    - adduser user </dev/null
stages:
  - build_and_install
  - test
build_and_install:gcc:
  stage: build_and_install
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - main
  script:
    - add-apt-repository -y ppa:tkchia/build-ia16
    - apt-get update -y
    - apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf elksemu
    - su user -c './tests/ci-build-and-install.sh --enable-elks-libc'
  timeout: 3h
  artifacts:
    paths:
      - ./tests/testsuite
      - ./build.tmp
      - ./install.tmp
build_and_install:ack:
  stage: build_and_install
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - main
  variables:
    DEBIAN_FRONTEND: noninteractive
  script:
    - apt-get install -y ack-compiler
    - su user -c './tests/ci-build-and-install.sh --ack'
  timeout: 3h
  artifacts:
    paths:
      - ./build.tmp
      - ./install.tmp
test1:gcc:
  stage: test
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - main
  needs:
    - job: build_and_install:gcc
      artifacts: true
  script:
    - add-apt-repository -y ppa:tkchia/build-ia16
    - apt-get update -y
    - apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf elksemu
    - touch -c ./tests/testsuite
    - >
        n_tests="`su user -c './tests/ci-count-tests.sh'`"
        && first=1
        && last="`expr $n_tests / 3`"
        && su user -c "./tests/ci-check.sh -j2 --x-test-underlying $first-$last"
  timeout: 3h
  artifacts:
    paths:
      - ./build.tmp
test2:gcc:
  stage: test
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - main
  needs:
    - job: build_and_install:gcc
      artifacts: true
  script:
    - add-apt-repository -y ppa:tkchia/build-ia16
    - apt-get update -y
    - apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf elksemu
    - touch -c ./tests/testsuite
    - >
        n_tests="`su user -c './tests/ci-count-tests.sh'`"
        && first="`expr $n_tests / 3 + 1`"
        && last="`expr 2 \* $n_tests / 3`"
        && su user -c
        "./tests/ci-check.sh -j2 --x-test-underlying $first-$last"
  timeout: 3h
  artifacts:
    paths:
      - ./build.tmp
test3:gcc:
  stage: test
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - main
  needs:
    - job: build_and_install:gcc
      artifacts: true
  script:
    - add-apt-repository -y ppa:tkchia/build-ia16
    - apt-get update -y
    - apt-get install -y gcc-ia16-elf elks-libc-gcc-ia16-elf elksemu
    - touch -c ./tests/testsuite
    - >
        n_tests="`su user -c './tests/ci-count-tests.sh'`"
        && first="`expr 2 \* $n_tests / 3 + 1`"
        && su user -c "./tests/ci-check.sh -j2 --x-test-underlying $first-"
  timeout: 3h
  artifacts:
    paths:
      - ./build.tmp
test:ack:
  stage: test
  only:
    refs:
      - branches
  except:
    refs:
      - master
      - main
  needs:
    - job: build_and_install:ack
      artifacts: true
  script: 
    - apt-get install -y ack-compiler
    - su user -c './tests/ci-check.sh'
  timeout: 3h
  artifacts:
    paths:
      - ./build.tmp
