dnl Copyright (c) 2018--2020 TK Chia
dnl
dnl This file is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU Lesser General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public License
dnl along with this program; see the file COPYING2.LIB.  If not see
dnl <http://www.gnu.org/licenses/>.

AT_BANNER([[<conio.h> tests (Borland compatibility)]])

AT_SETUP([[inportb, outportb]])
AT_LIBI86_CHECK_FOR_NONDPMIABLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
#include <stdlib.h>

static unsigned ticks (void)
{
  return *(unsigned volatile __far *) 0x0040006cul;
}

static void do_abort (unsigned char s_ocw1)
{
  outportb (0x21, s_ocw1);
  abort ();
}

int
main (void)
{
  unsigned from, c1, c2;
  unsigned char s_ocw1 = inportb (0x21);

  if ((s_ocw1 & 0x03) != 0x00)
    abort ();

  srand (ticks ());
  c1 = 5000;
  while (c1-- != 0)
    {
      outportb (0x21, 0xff);
      from = ticks ();
      c2 = rand() / (RAND_MAX / 100) + 1;
      while (c2-- != 0)
	{
	  if (ticks () != from)
	    do_abort (s_ocw1);
        }
      if (inportb (0x21) != 0xff)
	do_abort (s_ocw1);

      outportb (0x21, s_ocw1);
      if (c1 % 200 == 0)
	while (ticks () == from)
	  __asm volatile ("hlt");
      if (inportb (0x21) != s_ocw1)
	do_abort (s_ocw1);
    }

  return 0;
}
]],[])
AT_CLEANUP

AT_SETUP([[cprintf, cputs (Borland)]])
AT_LIBI86_CHECK_CONSOLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
int
main (int argc, char **argv)
{
  cputs ("hello ");
  cprintf ("%s%c...\n\n...with argc == %#x\n", "world", (int) '!', argc);
  return 0;
}]],[[hello world!...

...with argc == 0x1
]])
AT_CLEANUP

AT_SETUP([[textmode]])
dnl FIXME...
AT_SKIP_IF([test yes = "$DOSEMU_IS_1"])
AT_LIBI86_CHECK_CONSOLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
int
main (void)
{
  textmode (MONO);
  cputs ("yo ");
  textmode (MONO);
  cputs ("dawg\n");
  return 0;
}]],[[yo dawg
]])
AT_CLEANUP

AT_SETUP([[gotoxy, putch, window, wherex, wherey (Borland)]])
AT_LIBI86_CHECK_CONSOLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
#include <stdlib.h>
int
main (int argc, char **argv)
{
  window (2, 4, 6, 8);
  window (11, 10, 10, 11);  /* this should do nothing */
  cprintf ("hello %s%c\a...argc == %#x\t", "world", (int) '!', argc);
  if (wherex () != 3 || wherey () != 5)
    abort ();
  gotoxy (3, 2);
  putch ('*');
  if (wherex () != 4 || wherey () != 2)
    abort ();
  return 0;
}]],[[


  worl
 d!*..
 argc
 == 0x
 1~011
]])
AT_CLEANUP

AT_SETUP([[clreol]])
AT_LIBI86_CHECK_CONSOLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
#include <stdlib.h>
int
main (void)
{
  int i;
  for (i = 1; i <= 10; ++i)
    {
      gotoxy (i, i);
      cputs ("hello world!");
    }
  window (10, 5, 15, 10);
  gotoxy (4, 2);
  clreol ();
  return 0;
}]],[[hello world!
 hello world!
  hello world!
   hello world!
    hello world!
     hello w   d!
      hello world!
       hello world!
        hello world!
         hello world!
]])
AT_CLEANUP

AT_SETUP([[clrscr]])
AT_LIBI86_CHECK_CONSOLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
#include <stdlib.h>
int
main (void)
{
  int i;
  cputs ("hello!\n");
  if (wherex () != 1 || wherey () != 2)
    abort ();
  clrscr ();
  if (wherex () != 1 || wherey () != 1)
    abort ();
  for (i = 1; i <= 5; ++i)
    {
      gotoxy (i, i);
      cputs ("world");
    }
  window (4, 2, 5, 4);
  clrscr ();
  putch ('*');
  if (wherex () != 2 || wherey () != 1)
    abort ();
  return 0;
}]],[[world
 wo* d
  w  ld
     rld
    world
]])
AT_CLEANUP

AT_SETUP([[delline]])
AT_LIBI86_CHECK_CONSOLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
#include <stdlib.h>
int
main (void)
{
  int i;
  for (i = 1; i <= 10; ++i)
    {
      gotoxy (i, i);
      cprintf ("%d hello world!", i);
    }
  gotoxy (3, 5);
  delline ();
  if (wherex () != 3 || wherey () != 5)
    abort ();
  return 0;
}]],[[1 hello world!
 2 hello world!
  3 hello world!
   4 hello world!
     6 hello world!
      7 hello world!
       8 hello world!
        9 hello world!
         10 hello world!
]])
AT_CLEANUP

AT_SETUP([[insline]])
AT_LIBI86_CHECK_CONSOLE(dnl
[[#define _BORLANDC_SOURCE
#include <conio.h>
#include <stdlib.h>
int
main (void)
{
  cputs ("hello ");
  insline ();
  if (wherex () != 7 || wherey () != 1)
    abort ();
  cputs ("world!");
  if (wherex () != 13 || wherey () != 1)
    abort ();
  return 0;
}]],[[      world!
hello
]])
AT_CLEANUP
