dnl Copyright (c) 2018--2019 TK Chia
dnl
dnl This file is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU Lesser General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public License
dnl along with this program; see the file COPYING2.LIB.  If not see
dnl <http://www.gnu.org/licenses/>.

dnl $1 = file name of program to compile
dnl $2 = file to write compiled binary to (default a.exe)
dnl $3 = GCC options
m4_define([AT_LIBI86_COMPILE],[dnl
at_libi86_multilib="`$CC $3 -print-multi-directory`"
AT_CHECK([[$CC -o ]m4_default($2,a.exe) ]dnl
[[-isystem "$abs_top_builddir/"ia16 -isystem "$abs_top_srcdir"/ia16 ]]dnl
[[-Wall -Werror=strict-prototypes -Werror=missing-prototypes ]][$3] [$1] dnl
[["$abs_top_builddir"/"$at_libi86_multilib"/ia16/libi86.a]],dnl
,[[ignore]],[[ignore]])])

dnl $1 = program to run on dosemu (default a.exe)
dnl $2 = Unix path which $1 resides in (defaults to current directory)
dnl $3 = options to pass to dosemu (default -dumb >a.log)
dnl $4 = Unix program to run to postprocess dosemu output (default
dnl	 postproc-stdout.sh in this file's source directory)
dnl Note: GitLab sets $TERM to `dumb'.  This causes video memory (0xb800:0)
dnl	  reads within dosemu to return all zeroes, which is not good for
dnl	  tests that need to capture "screen contents".  Set $TERM to
dnl	  something more reasonable in this case.
m4_define([AT_LIBI86_RUN],[[( \
  export li86_cv_dosemu_is_1 && \
  if test x = x"$TERM" -o xdumb = x"$TERM"; then \
    TERM=vt220 && LINES=25 && COLUMNS=80 && export TERM LINES COLUMNS; \
  fi && \
  rm -f a.log && \
  ulimit -t 60 && \
  if test yes = "$li86_cv_dosemu_is_1"; then \
    $DOSEMU ]m4_default($3,-dumb >a.log)[ \
      ]m4_default($2,.)/m4_default($1,a.exe)[; \
  else \
    $DOSEMU ]m4_default($3,-dumb >a.log)[ \
      -quiet -K ]m4_default($2,.)[ -E ]m4_default($1,a.exe)[;
  fi </dev/null && \
  test -f a.log && \
  ]m4_default($4,"$abs_srcdir"/postproc-stdout.sh)[ <a.log && \
  rm a.log
)]])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_A],[dnl
AT_LIBI86_COMPILE($2,$3,$1)
AT_CHECK([AT_LIBI86_RUN($4,,$5,$6)],,[[expout]],[[ignore]])])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_B],[dnl
_AT_LIBI86_DO_CHECK_EXPOUT_A([[-O2 ]]$@)
_AT_LIBI86_DO_CHECK_EXPOUT_A([[-Os ]]$@)
_AT_LIBI86_DO_CHECK_EXPOUT_A([[-Os -masm=intel ]]$@)])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_C],[dnl
_AT_LIBI86_DO_CHECK_EXPOUT_B($@)
_AT_LIBI86_DO_CHECK_EXPOUT_B([[-march=any_186 ]]$@)])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_D],[dnl
_AT_LIBI86_DO_CHECK_EXPOUT_B($@)
_AT_LIBI86_DO_CHECK_EXPOUT_B([[-mrtd ]]$@)
_AT_LIBI86_DO_CHECK_EXPOUT_C([[-mregparmcall ]]$@)])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_E],[dnl
[case x"$at_libi86_cc_have_medium_model",']$1[' in
xno,*-mcmodel=medium*)
;;
*)
]_AT_LIBI86_DO_CHECK_EXPOUT_D($@)[
;;
esac]])

dnl $1 = GCC options
dnl $2 = file name of program to compile
dnl $3 = file to write compiled binary to (default a.exe)
dnl $4 = program to run on dosemu (default a.exe)
dnl $5 = options to pass to dosemu (default -dumb >a.log)
dnl $6 = Unix program to run to postprocess dosemu output (default
dnl	 postproc-stdout.sh in this file's source directory)
m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_F],[dnl
_AT_LIBI86_DO_CHECK_EXPOUT_E($@)
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mdpmiable ]]$@)
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mprotected-mode ]]$@)])

m4_define([AT_LIBI86_CHECK_FOR_NEAR_DATA_MODEL_NONDPMIABLE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_E(,a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CHECK_FOR_NEAR_DATA_MODEL],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_F(,a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_F([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
dnl do not try -mdpmiable for medium model for now
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

dnl $1 = text of program to test
dnl $2 = expected program output
dnl $3 = program to run on dosemu (default a.exe)
dnl $4 = options to pass to dosemu (default -dumb >a.log)
dnl $5 = Unix program to run to postprocess dosemu output (default
dnl	 postproc-stdout.sh in this file's source directory)
m4_define([AT_LIBI86_CHECK],[dnl
AT_LIBI86_CHECK_FOR_NEAR_DATA_MODEL($@)])

m4_define([AT_LIBI86_CHECK_FOR_SMALL_MODEL_OR_ABOVE_NONDPMIABLE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CHECK_FOR_SMALL_MODEL_OR_ABOVE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_F([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_F([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CHECK_FOR_NONDPMIABLE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_E(,a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CONSOLE_CAPTURE_PROG],["$abs_srcdir"/capture.S])

dnl $1 = text of program to test
dnl $2 = expected program output on console
dnl $3 = additional options to pass to dosemu (especially -input ...)
m4_define([AT_LIBI86_CHECK_CONSOLE],[dnl
dnl FIXME: capture.exe is rebuilt at each call to AT_LIBI86_CHECK_CONSOLE(...).
AT_LIBI86_COMPILE(AT_LIBI86_CONSOLE_CAPTURE_PROG,capture.exe,-Os -mregparmcall)
AT_DATA([[x.bat]],dnl
[[@echo off
cls
a.exe
if not errorlevel 1 goto ok
goto done
:ok
capture.exe >a.log
if errorlevel 1 del a.log
:done
]])
AT_LIBI86_CHECK([$1],[$2],[[x.bat]],[$3 [-t >/dev/null]],dnl
[["$abs_srcdir"/postproc-console.sh]])])

m4_define([AT_LIBI86_CHECK_CONSOLE_FOR_NONDPMIABLE],[dnl
AT_LIBI86_COMPILE(AT_LIBI86_CONSOLE_CAPTURE_PROG,capture.exe,-Os -mregparmcall)
AT_DATA([[x.bat]],dnl
[[@echo off
cls
a.exe
if not errorlevel 1 goto ok
goto done
:ok
capture.exe >a.log
if errorlevel 1 del a.log
:done
]])
AT_LIBI86_CHECK_FOR_NONDPMIABLE([$1],[$2],[[x.bat]],[$3 [-t >/dev/null]],dnl
[["$abs_srcdir"/postproc-console.sh]])])
