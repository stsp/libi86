dnl Copyright (c) 2018--2020 TK Chia
dnl
dnl Redistribution and use in source and binary forms, with or without
dnl modification, are permitted provided that the following conditions are
dnl met:
dnl
dnl   * Redistributions of source code must retain the above copyright
dnl     notice, this list of conditions and the following disclaimer.
dnl   * Redistributions in binary form must reproduce the above copyright
dnl     notice, this list of conditions and the following disclaimer in the
dnl     documentation and/or other materials provided with the distribution.
dnl   * Neither the name of the developer(s) nor the names of its
dnl     contributors may be used to endorse or promote products derived from
dnl     this software without specific prior written permission.
dnl
dnl THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
dnl IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
dnl TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
dnl PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
dnl HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
dnl SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
dnl TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
dnl PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
dnl LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
dnl NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
dnl SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

dnl $1 = file name of program to compile
dnl $2 = file to write compiled binary to (default a.exe)
dnl $3 = GCC options
m4_define([AT_LIBI86_COMPILE],[dnl
at_libi86_multilib="`$CC $CPPFLAGS $3 -print-multi-directory`"
AT_CHECK([[$CC -o ]m4_default($2,a.exe)[ $CPPFLAGS ]]dnl
[[-isystem "$abs_top_builddir"/"$libi86_hostdir" ]]dnl
[[-isystem "$abs_top_srcdir"/"$libi86_hostdir" ]]dnl
[[-isystem "$abs_top_srcdir"/include ]]dnl
[[-Wall -Werror=strict-prototypes -Werror=missing-prototypes ]][$3] [$1] dnl
[["$abs_top_builddir"/"$at_libi86_multilib"/"$libi86_hostdir"/libi86.a]],dnl
,[[ignore]],[[ignore]])])

dnl $1 = file name of program to compile
dnl $2 = file to write compiled binary to (default a.exe)
dnl $3 = G++ options
m4_define([AT_LIBI86_COMPILE_CXX],[dnl
at_libi86_multilib="`$CXX $CPPFLAGS $3 -print-multi-directory`"
AT_CHECK([[$CXX -o ]m4_default($2,a.exe)[ $CPPFLAGS ]]dnl
[[-isystem "$abs_top_builddir"/"$libi86_hostdir" ]]dnl
[[-isystem "$abs_top_srcdir"/"$libi86_hostdir" ]]dnl
[[-isystem "$abs_top_srcdir"/include ]]dnl
[[-Wall ]][$3] [$1] dnl
[["$abs_top_builddir"/"$at_libi86_multilib"/"$libi86_hostdir"/libi86.a]],dnl
,[[ignore]],[[ignore]])])

dnl $1 = program to run on dosemu (default a.exe)
dnl $2 = Unix path which $1 resides in (defaults to current directory)
dnl $3 = options to pass to dosemu (default -dumb [-tde] >a.log)
dnl $4 = Unix program to run to postprocess dosemu output (default
dnl	 postproc-stdout.sh in this file's source directory)
dnl Note: GitLab sets $TERM to `dumb'.  This causes video memory (0xb800:0)
dnl	  reads within dosemu to return all zeroes, which is not good for
dnl	  tests that need to capture "screen contents".  Set $TERM to
dnl	  something more reasonable in this case.
m4_define([AT_LIBI86_RUN],[[( \
  if test x = x"$TERM" -o xdumb = x"$TERM"; then \
    TERM=vt220 && LINES=25 && COLUMNS=80 && export TERM LINES COLUMNS; \
  fi && \
  rm -f a.log && \
  ulimit -t 60 && \
  if test yes = "$DOSEMU_IS_1"; then \
    "$DOSEMU" $DOSEMU_OPTS ]m4_default($3,-dumb >a.log)[ \
      ]m4_default($2,.)/m4_default($1,a.exe)[; \
  else \
    "$DOSEMU" $DOSEMU_OPTS ]m4_default($3,-dumb -tde >a.log)[ \
      -K ]m4_default($2,.)[ -E ]m4_default($1,a.exe)[; \
  fi </dev/null && \
  test -f a.log && \
  ]m4_default($4,"$abs_srcdir"/postproc-stdout.sh)[ <a.log && \
  rm a.log
)]])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_A],[dnl
AT_LIBI86_COMPILE($2,$3,$1)
AT_CHECK([AT_LIBI86_RUN($4,,$5,$6)],,[[expout]],[[ignore]])])

m4_define([_AT_LIBI86_DO_CHECK_CXX_EXPOUT_A],[dnl
AT_LIBI86_COMPILE_CXX($2,$3,$1)
AT_CHECK([AT_LIBI86_RUN($4,,$5,$6)],,[[expout]],[[ignore]])])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_B],[dnl
_AT_LIBI86_DO_CHECK_EXPOUT_A([[-Os ]]$@)
if "$at_arg_x_test_underlying"; then :; else
_AT_LIBI86_DO_CHECK_EXPOUT_A([[-O0 ]]$@)
_AT_LIBI86_DO_CHECK_EXPOUT_A([[-Os -masm=intel ]]$@)
fi])

m4_define([_AT_LIBI86_DO_CHECK_CXX_EXPOUT_B],[dnl
_AT_LIBI86_DO_CHECK_CXX_EXPOUT_A([[-Os ]]$@)
if "$at_arg_x_test_underlying"; then :; else
_AT_LIBI86_DO_CHECK_CXX_EXPOUT_A([[-O0 ]]$@)
_AT_LIBI86_DO_CHECK_CXX_EXPOUT_A([[-Os -masm=intel ]]$@)
fi])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_C],[dnl
_AT_LIBI86_DO_CHECK_EXPOUT_B($@)
if "$at_arg_x_test_underlying"; then :; else
_AT_LIBI86_DO_CHECK_EXPOUT_B([[-march=any_186 ]]$@)
fi])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_D],[dnl
if "$at_arg_x_test_underlying"; then :; else
_AT_LIBI86_DO_CHECK_EXPOUT_B($@)
_AT_LIBI86_DO_CHECK_EXPOUT_B([[-mrtd ]]$@)
fi
_AT_LIBI86_DO_CHECK_EXPOUT_C([[-mregparmcall ]]$@)])

m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_E],[dnl
[case x"$at_libi86_cc_have_medium_model",']$1[' in
xno,*-mcmodel=medium*)
;;
*)
]_AT_LIBI86_DO_CHECK_EXPOUT_D($@)[
;;
esac]])

dnl $1 = GCC options
dnl $2 = file name of program to compile
dnl $3 = file to write compiled binary to (default a.exe)
dnl $4 = program to run on dosemu (default a.exe)
dnl $5 = options to pass to dosemu (default -dumb [-tde] >a.log)
dnl $6 = Unix program to run to postprocess dosemu output (default
dnl	 postproc-stdout.sh in this file's source directory)
m4_define([_AT_LIBI86_DO_CHECK_EXPOUT_F],[dnl
_AT_LIBI86_DO_CHECK_EXPOUT_E($@)
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mdpmiable ]]$@)
if "$at_arg_x_test_underlying"; then :; else
_AT_LIBI86_DO_CHECK_EXPOUT_C([[-mprotected-mode ]]$@)
fi])

m4_define([AT_LIBI86_CHECK_FOR_NEAR_DATA_MODEL_NONDPMIABLE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_E(,a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CHECK_FOR_NEAR_DATA_MODEL],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
if "$at_arg_x_test_underlying"; then :; else
_AT_LIBI86_DO_CHECK_EXPOUT_F(,a.c,,m4_shift(m4_shift($@)))
fi
_AT_LIBI86_DO_CHECK_EXPOUT_F([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
dnl do not try -mdpmiable for medium model for now
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CHECK_CXX_FOR_NEAR_DATA_MODEL],[dnl
dnl (1) if ia16-elf-g++ does not exist or does not work, just skip test(s)
dnl (2) ia16-elf-g++ simply does not support medium model yet
if test false != "$CXX"; then
AT_DATA([[a.cc]],[$1
])
AT_DATA([[expout]],[$2])
if "$at_arg_x_test_underlying"; then :; else
_AT_LIBI86_DO_CHECK_CXX_EXPOUT_B(,a.cc,,m4_shift(m4_shift($@)))
fi
_AT_LIBI86_DO_CHECK_CXX_EXPOUT_B([[-mcmodel=small]],a.cc,,dnl
m4_shift(m4_shift($@)))
fi])

dnl $1 = text of program to test
dnl $2 = expected program output
dnl $3 = program to run on dosemu (default a.exe)
dnl $4 = options to pass to dosemu (default -dumb [-tde] >a.log)
dnl $5 = Unix program to run to postprocess dosemu output (default
dnl	 postproc-stdout.sh in this file's source directory)
m4_define([AT_LIBI86_CHECK],[dnl
AT_LIBI86_CHECK_FOR_NEAR_DATA_MODEL($@)])

dnl $1 = text of program to test
dnl $2 = expected program output
dnl $3 = program to run on dosemu (default a.exe)
dnl $4 = options to pass to dosemu (default -dumb [-tde] >a.log)
dnl $5 = Unix program to run to postprocess dosemu output (default
dnl	 postproc-stdout.sh in this file's source directory)
m4_define([AT_LIBI86_CHECK_CXX],[dnl
AT_LIBI86_CHECK_CXX_FOR_NEAR_DATA_MODEL($@)])

m4_define([AT_LIBI86_CHECK_FOR_SMALL_MODEL_OR_ABOVE_NONDPMIABLE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CHECK_FOR_SMALL_MODEL_OR_ABOVE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_F([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_F([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CHECK_FOR_NONDPMIABLE],[dnl
AT_DATA([[a.c]],[$1
])
AT_DATA([[expout]],[$2])
_AT_LIBI86_DO_CHECK_EXPOUT_E(,a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=small]],a.c,,m4_shift(m4_shift($@)))
_AT_LIBI86_DO_CHECK_EXPOUT_E([[-mcmodel=medium]],a.c,,m4_shift(m4_shift($@)))])

m4_define([AT_LIBI86_CONSOLE_CAPTURE_PROG],["$abs_srcdir"/capture.S])

dnl $1 = text of program to test
dnl $2 = expected program output on console
dnl $3 = additional options to pass to dosemu (especially -input ...)
m4_define([AT_LIBI86_CHECK_CONSOLE],[dnl
dnl FIXME: capture.exe is rebuilt at each call to AT_LIBI86_CHECK_CONSOLE(...).
AT_LIBI86_COMPILE(AT_LIBI86_CONSOLE_CAPTURE_PROG,capture.exe,-Os -mregparmcall)
AT_DATA([[x.bat]],dnl
[[@echo off
cls
a.exe
if not errorlevel 1 goto ok
goto done
:ok
capture.exe >a.log
if errorlevel 1 del a.log
:done
]])
unix2dos x.bat
AT_LIBI86_CHECK([$1],[$2],[[x.bat]],[$3 [-t >/dev/null]],dnl
[["$abs_srcdir"/postproc-console.sh]])])

m4_define([AT_LIBI86_CHECK_CONSOLE_FOR_NONDPMIABLE],[dnl
AT_LIBI86_COMPILE(AT_LIBI86_CONSOLE_CAPTURE_PROG,capture.exe,-Os -mregparmcall)
AT_DATA([[x.bat]],dnl
[[@echo off
cls
a.exe
if not errorlevel 1 goto ok
goto done
:ok
capture.exe >a.log
if errorlevel 1 del a.log
:done
]])
unix2dos x.bat
AT_LIBI86_CHECK_FOR_NONDPMIABLE([$1],[$2],[[x.bat]],[$3 [-t >/dev/null]],dnl
[["$abs_srcdir"/postproc-console.sh]])])
