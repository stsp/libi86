dnl Copyright (c) 2020 TK Chia
dnl
dnl This file is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU Lesser General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public License
dnl along with this program; see the file COPYING2.LIB.  If not see
dnl <http://www.gnu.org/licenses/>.

AT_BANNER([[<graph.h> tests]])

AT_SETUP([[_setvideomode, _getvideomode]])
AT_LIBI86_CHECK(dnl
[[#include <stdio.h>
#include <stdlib.h>
#include <graph.h>
__attribute__ ((noinline)) static void
do_abort (unsigned line, short r)
{
  _setvideomode (_DEFAULTMODE);
  printf ("%u: r == %hd\n", line, r);
  fflush (stdout);
  abort ();
}
int
main (void)
{
  short m = _getvideomode ();
  short r = _setvideomode (_TEXTC40);
  switch (r)
    {
    case 25:
      m = _TEXTC40;
      /* fall through */
    case 0:
      if (_getvideomode () != m)
	do_abort (__LINE__, r);
      break;
    default:
      do_abort (__LINE__, r);
    }
  r = _setvideomode (_TEXTMONO);
  switch (r)
    {
    case 25:
      m = _TEXTMONO;
      /* fall through */
    case 0:
      if (_getvideomode () != m)
	do_abort (__LINE__, r);
      break;
    default:
      do_abort (__LINE__, r);
    }
  r = _setvideomode (_MRES4COLOR);
  switch (r)
    {
    case 25:
      m = _MRES4COLOR;
      /* fall through */
    case 0:
      if (_getvideomode () != m)
	do_abort (__LINE__, r);
      break;
    default:
      do_abort (__LINE__, r);
    }
  r = _setvideomode (_VRES16COLOR);
  switch (r)
    {
    case 30:
      m = _VRES16COLOR;
      /* fall through */
    case 0:
      if (_getvideomode () != m)
	do_abort (__LINE__, r);
      break;
    default:
      do_abort (__LINE__, r);
    }
  r = _setvideomode (_VRES256COLOR);
  switch (r)
    {
    case 30:
      m = _VRES256COLOR;
      /* fall through */
    case 0:
      if (_getvideomode () != m)
	do_abort (__LINE__, r);
      break;
    default:
      do_abort (__LINE__, r);
    }
  r = _setvideomode (_DEFAULTMODE);
#if 0  /* FIXME: this part fails under dosemu 1.4.0.8.  */
  if (! r)
    abort ();
#endif
  return 0;
}]],[])
AT_CLEANUP
