dnl Copyright (c) 2021 TK Chia
dnl
dnl This file is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU Lesser General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public License
dnl along with this program; see the file COPYING2.LIB.  If not see
dnl <http://www.gnu.org/licenses/>.

AT_BANNER([[<i86.h> tests (Borland compatibility)]])

AT_SETUP([[int86 (Borland)]])
AT_LIBI86_CHECK(dnl
[[#define _BORLANDC_SOURCE
#include <i86.h>
#include <string.h>
int main (void)
{
  union REGS regs;
#ifdef __MSDOS__
  static char msg[] = "Hello from int86!\r\n$(ignore this part)\r\n";
  memset (&regs, 0xf6, sizeof (regs));
  regs.h.ah = 0x09;
  regs.x.dx = FP_OFF (msg);
  int86 (0x21, &regs, &regs);
  /*
   * Check that there is a `flags' field & that its contents look OK.  IF
   * should be set, while DF & TF should be clear.
   */
  if ((regs.x.flags & 0x0700) != 0x0200)
    abort ();
#else
# error
#endif
  return 0;
}]],[[Hello from int86!
]])
AT_CLEANUP

AT_SETUP([[int86x (Borland)]])
AT_LIBI86_CHECK_FOR_NONDPMIABLE(dnl
[[#define _BORLANDC_SOURCE
#include <stdlib.h>
#include <i86.h>
#include <string.h>
int main (void)
{
  union REGS regs;
  struct SREGS sregs;
#ifdef __MSDOS__
  static char msg[] = "Hello from int86x!\r\n$(ignore this part)\r\n";
  memset (&regs, 0xf6, sizeof (regs));
  memset (&sregs, 0xf6, sizeof (sregs));
  sregs.ds = FP_SEG (msg);
  regs.h.ah = 0x09;
  regs.x.dx = FP_OFF (msg);
  int86x (0x21, &regs, &regs, &sregs);
  if ((regs.x.flags & 0x0700) != 0x0200)
    abort ();
# ifndef __IA16_CMODEL_IS_FAR_TEXT
  if (sregs.cs != FP_SEG (main))
    abort ();
# endif
  if (sregs.ds != FP_SEG (msg))
    abort ();
  if (sregs.es != 0xf6f6u)
    abort ();
  if (sregs.ss != FP_SEG (&regs))
    abort ();
#else
# error
#endif
  return 0;
}]],[[Hello from int86x!
]])
AT_CLEANUP
